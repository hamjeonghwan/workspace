package kr.or.ddit.basic;

import java.util.HashSet;
import java.util.Iterator;
import java.util.Set;

public class T09_SetTest {
	public static void main(String[] args) {
		Set hs1 =new HashSet();
		
		// Set에 데이터를 추가할 때도 add() 메서드를 사용한다
		hs1.add("DD");
		hs1.add("AA");
		hs1.add(163);
		hs1.add("CC");
		hs1.add("BB");
		hs1.add(158);
		hs1.add(168);
		hs1.add(170);
		
		System.out.println("Set 데이터 : " + hs1);
		System.out.println();
		
		// Set은 데이터의 순서가 없고, 중복을 허용하지 않는다 
		// 그래서 이미 있는 데이터를 add하면 false를 반환하고, 데이터는 추가되지 않는다
		
		boolean isAdd = hs1.add("FF");
		System.out.println("중복되지 않을 때 : " + isAdd);
		System.out.println("Set 데이터 : " + hs1);
		System.out.println();
		
		isAdd = hs1.add(158);
		
		System.out.println("중복될 때 : " + isAdd);
		System.out.println("Set 데이터 : " + hs1);
		System.out.println();
		
		// Set의 데이터를 수정하려면 수정하는 명령이 따로 없기 때문에 해당자료를 삭제한 후
		// 새로운 데이터를 추가해 주어야 한다 
		
		// 삭제하는 메서드 
		// 1. Clear() = Set 데이터 전체 삭제
		// 2. remove(삭제할 자료) => 해당자료 삭제
		
		hs1.remove("FF");
		System.out.println("삭제 후 Set 데이터 : " + hs1);
		System.out.println();
		
		hs1.add("EE");
		System.out.println("Set 데이터 :" + hs1);
		
		// hs1.clear();  전체 자료 삭제
		System.out.println("Clear 후 Set 데이터 : " + hs1);
		System.out.println("Set의 자료 개수 : " + hs1.size());
		System.out.println();
		
		// Set은 데이터의 순서가 없기 때문에 List처럼 인덱스로 데이터를 하나씩 불러올 수 없다 
		// 그래서 데이터를 하나씩 얻기 위해서는 Iterator로 변환해야 한다 
		// Set의 데이터를 Iterator로 변환하기 => Set의 iterator() 메서드를 호출하면 된다 
		Iterator it = hs1.iterator();
		
		
	}
}
